//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _RootShaderParameters
// {
//
//   uint MipIndex;                     // Offset:    0 Size:     4
//   uint NumMips;                      // Offset:    4 Size:     4
//   int CubeFace;                      // Offset:    8 Size:     4 [unused]
//   int FaceThreadGroupSize;           // Offset:   12 Size:     4
//   int2 ValidDispatchCoord;           // Offset:   16 Size:     8
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// SourceCubemapSampler              sampler      NA          NA             s0      1 
// SourceCubemapTexture              texture  float4        cube             t0      1 
// OutTextureMipColor                    UAV  float4     2darray             u0      1 
// _RootShaderParameters             cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texturecube (float,float,float,float) t0
dcl_uav_typed_texture2darray (float,float,float,float) u0
dcl_input vThreadID.xy
dcl_temps 9
dcl_thread_group 8, 8, 1
udiv null, r0.x, vThreadID.x, cb0[0].w
mov r0.y, vThreadID.y
uge r1.xy, r0.xyxx, cb0[1].xyxx
or r1.x, r1.y, r1.x
if_nz r1.x
  ret 
endif 
xor r1.x, vThreadID.x, cb0[0].w
imax r1.y, cb0[0].w, -cb0[0].w
udiv r1.y, null, vThreadID.x, r1.y
ineg r1.z, r1.y
and r1.x, r1.x, l(0x80000000)
movc r0.zw, r1.xxxx, r1.zzzz, r1.yyyy
utof r1.xyzw, r0.yxyx
add r1.xyzw, r1.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
itof r2.xyzw, cb0[1].yxyx
div r1.xyzw, r1.xyzw, r2.xyzw
mad r1.xyzw, r1.zxyw, l(2.000000, 2.000000, 2.000000, 2.000000), l(0.000000, -1.000000, -1.000000, -1.000000)
ieq r2.xyzw, r0.wwww, l(1, 2, 3, 4)
mul r3.xy, r1.zyzz, l(1.000000, -1.000000, 0.000000, 0.000000)
mov r3.zw, l(0,0,1.000000,-1.000000)
mov r4.xz, -r1.yyzy
mov r4.y, l(-1.000000)
movc r5.xyz, r2.wwww, r3.xyzx, r4.zxyz
movc r5.xyz, r2.zzzz, r3.xwyx, r5.xyzx
mov r6.xy, r3.xzxx
mov r6.z, r1.y
movc r5.xyz, r2.yyyy, r6.xyzx, r5.xyzx
movc r5.xyz, r2.xxxx, r3.wyxw, r5.xyzx
mov r4.xy, r3.zyzz
movc r3.xyz, r0.wwww, r5.xyzx, r4.xyzx
iadd r3.w, -cb0[0].x, cb0[0].y
iadd r3.w, r3.w, l(-1)
ishl r3.w, l(1), r3.w
dp3 r4.x, r3.xyzx, r3.xyzx
rsq r4.x, r4.x
mul r4.xyz, r3.zxyz, r4.xxxx
mul r5.xy, r1.wxww, l(1.000000, -1.000000, 0.000000, 0.000000)
mov r5.zw, l(0,0,1.000000,-1.000000)
mov r6.xz, -r1.wwxw
mov r6.y, l(-1.000000)
movc r7.xyz, r2.wwww, r5.zxyz, r6.yxzy
movc r7.xyz, r2.zzzz, r5.yxwy, r7.xyzx
mov r1.yz, r5.xxzx
movc r1.xyz, r2.yyyy, r1.xyzx, r7.xyzx
movc r1.xyz, r2.xxxx, r5.xwyx, r1.xyzx
mov r6.yz, r5.zzyz
movc r1.xyz, r0.wwww, r1.xyzx, r6.xyzx
mul r2.xyz, r4.zxyz, r1.xyzx
mad r1.xyz, r1.zxyz, r4.xyzx, -r2.xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx
mul r2.xyz, r1.yzxy, r4.xyzx
mad r2.xyz, r4.zxyz, r1.zxyz, -r2.xyzx
utof r1.w, r3.w
div r1.w, l(4.000000), r1.w
sample_l_indexable(texturecube)(float,float,float,float) r4.xyzw, r3.xyzx, t0.xyzw, s0, l(0.000000)
mul r5.xy, r1.wwww, l(-0.700000, 0.700000, 0.000000, 0.000000)
mad r6.xyz, r1.xyzx, r5.xxxx, r3.xyzx
mad r7.xyz, r2.xyzx, r5.xxxx, r6.xyzx
sample_l_indexable(texturecube)(float,float,float,float) r7.xyzw, r7.xyzx, t0.xyzw, s0, l(0.000000)
mad r4.xyzw, r7.xyzw, l(0.375000, 0.375000, 0.375000, 0.375000), r4.xyzw
mad r7.xyz, r1.xyzx, r5.yyyy, r3.xyzx
mad r5.xzw, r2.xxyz, r5.xxxx, r7.xxyz
sample_l_indexable(texturecube)(float,float,float,float) r8.xyzw, r5.xzwx, t0.xyzw, s0, l(0.000000)
mad r4.xyzw, r8.xyzw, l(0.375000, 0.375000, 0.375000, 0.375000), r4.xyzw
mad r5.xzw, r2.xxyz, r5.yyyy, r6.xxyz
sample_l_indexable(texturecube)(float,float,float,float) r6.xyzw, r5.xzwx, t0.xyzw, s0, l(0.000000)
mad r4.xyzw, r6.xyzw, l(0.375000, 0.375000, 0.375000, 0.375000), r4.xyzw
mad r5.xyz, r2.xyzx, r5.yyyy, r7.xyzx
sample_l_indexable(texturecube)(float,float,float,float) r5.xyzw, r5.xyzx, t0.xyzw, s0, l(0.000000)
mad r4.xyzw, r5.xyzw, l(0.375000, 0.375000, 0.375000, 0.375000), r4.xyzw
mad r5.xyz, r2.xyzx, -r1.wwww, r3.xyzx
sample_l_indexable(texturecube)(float,float,float,float) r5.xyzw, r5.xyzx, t0.xyzw, s0, l(0.000000)
mad r4.xyzw, r5.xyzw, l(0.375000, 0.375000, 0.375000, 0.375000), r4.xyzw
mad r5.xyz, r1.xyzx, -r1.wwww, r3.xyzx
sample_l_indexable(texturecube)(float,float,float,float) r5.xyzw, r5.xyzx, t0.xyzw, s0, l(0.000000)
mad r4.xyzw, r5.xyzw, l(0.375000, 0.375000, 0.375000, 0.375000), r4.xyzw
mad r1.xyz, r1.xyzx, r1.wwww, r3.xyzx
sample_l_indexable(texturecube)(float,float,float,float) r5.xyzw, r1.xyzx, t0.xyzw, s0, l(0.000000)
mad r4.xyzw, r5.xyzw, l(0.375000, 0.375000, 0.375000, 0.375000), r4.xyzw
mad r1.xyz, r2.xyzx, r1.wwww, r3.xyzx
sample_l_indexable(texturecube)(float,float,float,float) r1.xyzw, r1.xyzx, t0.xyzw, s0, l(0.000000)
mad r1.xyzw, r1.xyzw, l(0.375000, 0.375000, 0.375000, 0.375000), r4.xyzw
mul r1.xyzw, r1.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
store_uav_typed u0.xyzw, r0.xyzw, r1.xyzw
ret 
// Approximately 88 instruction slots used
