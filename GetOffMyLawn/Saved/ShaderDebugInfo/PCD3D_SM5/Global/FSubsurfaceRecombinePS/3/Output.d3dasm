//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _RootShaderParameters
// {
//
//   float4 SubsurfaceParams;           // Offset:   16 Size:    16 [unused]
//   float2 SubsurfaceInput0_Extent;    // Offset:  128 Size:     8 [unused]
//   float2 SubsurfaceInput0_ExtentInverse;// Offset:  136 Size:     8 [unused]
//   float2 SubsurfaceInput0_ScreenPosToViewportScale;// Offset:  144 Size:     8 [unused]
//   float2 SubsurfaceInput0_ScreenPosToViewportBias;// Offset:  152 Size:     8 [unused]
//   uint2 SubsurfaceInput0_ViewportMin;// Offset:  160 Size:     8 [unused]
//   uint2 SubsurfaceInput0_ViewportMax;// Offset:  168 Size:     8 [unused]
//   float2 SubsurfaceInput0_ViewportSize;// Offset:  176 Size:     8 [unused]
//   float2 SubsurfaceInput0_ViewportSizeInverse;// Offset:  184 Size:     8 [unused]
//   float2 SubsurfaceInput0_UVViewportMin;// Offset:  192 Size:     8 [unused]
//   float2 SubsurfaceInput0_UVViewportMax;// Offset:  200 Size:     8 [unused]
//   float2 SubsurfaceInput0_UVViewportSize;// Offset:  208 Size:     8 [unused]
//   float2 SubsurfaceInput0_UVViewportSizeInverse;// Offset:  216 Size:     8 [unused]
//   float2 SubsurfaceInput0_UVViewportBilinearMin;// Offset:  224 Size:     8 [unused]
//   float2 SubsurfaceInput0_UVViewportBilinearMax;// Offset:  232 Size:     8 [unused]
//   float2 SubsurfaceInput1_Extent;    // Offset:  256 Size:     8 [unused]
//   float2 SubsurfaceInput1_ExtentInverse;// Offset:  264 Size:     8 [unused]
//   float2 SubsurfaceInput1_ScreenPosToViewportScale;// Offset:  272 Size:     8 [unused]
//   float2 SubsurfaceInput1_ScreenPosToViewportBias;// Offset:  280 Size:     8 [unused]
//   uint2 SubsurfaceInput1_ViewportMin;// Offset:  288 Size:     8 [unused]
//   uint2 SubsurfaceInput1_ViewportMax;// Offset:  296 Size:     8 [unused]
//   float2 SubsurfaceInput1_ViewportSize;// Offset:  304 Size:     8 [unused]
//   float2 SubsurfaceInput1_ViewportSizeInverse;// Offset:  312 Size:     8 [unused]
//   float2 SubsurfaceInput1_UVViewportMin;// Offset:  320 Size:     8 [unused]
//   float2 SubsurfaceInput1_UVViewportMax;// Offset:  328 Size:     8 [unused]
//   float2 SubsurfaceInput1_UVViewportSize;// Offset:  336 Size:     8 [unused]
//   float2 SubsurfaceInput1_UVViewportSizeInverse;// Offset:  344 Size:     8 [unused]
//   float2 SubsurfaceInput1_UVViewportBilinearMin;// Offset:  352 Size:     8
//   float2 SubsurfaceInput1_UVViewportBilinearMax;// Offset:  360 Size:     8
//   uint CheckerboardNeighborSSSValidation;// Offset:  400 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// SceneTexturesStruct_PointClampSampler    sampler      NA          NA             s0      1 
// SubsurfaceSampler0                sampler      NA          NA             s1      1 
// View_SSProfilesTexture            texture  float4          2d             t0      1 
// SceneTexturesStruct_GBufferBTexture    texture  float4          2d             t1      1 
// SceneTexturesStruct_GBufferCTexture    texture  float4          2d             t2      1 
// SceneTexturesStruct_GBufferDTexture    texture  float4          2d             t3      1 
// SubsurfaceInput0_Texture          texture  float4          2d             t4      1 
// SubsurfaceInput1_Texture          texture  float4          2d             t5      1 
// _RootShaderParameters             cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy  
// SV_POSITION              0   xyzw        1      POS   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[23], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_input_ps linear noperspective v0.xy
dcl_output o0.xyzw
dcl_temps 6
sample_l_indexable(texture2d)(float,float,float,float) r0.x, v0.xyxx, t1.wxyz, s0, l(0.000000)
mad r0.x, r0.x, l(255.000000), l(0.500000)
ftou r0.x, r0.x
and r0.x, r0.x, l(15)
ieq r0.yz, r0.xxxx, l(0, 5, 9, 0)
or r0.w, r0.z, r0.y
if_z r0.w
  sample_indexable(texture2d)(float,float,float,float) o0.xyzw, v0.xyxx, t4.xyzw, s1
  ret 
endif 
sample_l_indexable(texture2d)(float,float,float,float) r1.xyz, v0.xyxx, t2.xyzw, s0, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r0.w, v0.xyxx, t3.yzwx, s0, l(0.000000)
ieq r2.xyzw, r0.xxxx, l(2, 3, 4, 6)
or r1.w, r2.y, r2.x
or r1.w, r2.z, r1.w
or r0.y, r0.y, r1.w
or r0.y, r2.w, r0.y
ieq r2.xy, r0.xxxx, l(7, 8, 0, 0)
or r0.x, r0.y, r2.x
or r0.x, r2.y, r0.x
or r0.x, r0.z, r0.x
and r0.x, r0.w, r0.x
mad r0.x, r0.x, l(255.000000), l(0.500000)
ftou r0.y, r0.x
mov r0.xzw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.xyz, r0.xyzw, t0.xyzw
max r2.xy, v0.xyxx, cb0[22].xyxx
min r2.xy, r2.xyxx, cb0[22].zwzz
sample_l_indexable(texture2d)(float,float,float,float) r2.xyzw, r2.xyxx, t5.xyzw, s1, l(0.000000)
max r0.w, r2.w, l(0.000010)
div r2.xyz, r2.xyzx, r0.wwww
sample_l_indexable(texture2d)(float,float,float,float) r3.xyzw, v0.xyxx, t4.xyzw, s1, l(0.000000)
dp3 r0.w, r3.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
div_sat r0.w, r3.w, r0.w
add r1.w, -r0.w, l(1.000000)
mul r4.xyz, r0.wwww, r3.xyzx
mul r5.xyz, r1.wwww, r3.xyzx
mad r2.xyz, -r3.xyzx, r0.wwww, r2.xyzx
mad r0.xyz, r0.xyzx, r2.xyzx, r4.xyzx
mad o0.xyz, r0.xyzx, r1.xyzx, r5.xyzx
mov o0.w, l(0)
ret 
// Approximately 42 instruction slots used
